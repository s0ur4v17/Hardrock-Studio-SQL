-- Query 1:

SELECT NAME FROM
(SELECT CONCAT(C.FIRST_NAME,' ',C.LAST_NAME) AS NAME, 
	    AVG(B.TOTAL_BILLING_AMOUNT) AS AVG_BILLING_AMOUNT
FROM CUSTOMER C
INNER JOIN BILLING B ON C.CUSTOMER_ID = B.CUSTOMER_ID
WHERE BILLING_DATE > NOW() - INTERVAL 1 MONTH
GROUP BY NAME) A
WHERE A.AVG_BILLING_AMOUNT > (SELECT AVG(TOTAL_BILLING_AMOUNT) FROM BILLING
WHERE BILLING_DATE > NOW() - INTERVAL 1 MONTH);

-- Query 2:

SELECT A.NAME AS ALBUM_NAME,
	   SUM(QUANTITY) AS ALBUMS_SOLD
FROM ALBUM A
INNER JOIN BILLING B ON A.ALBUM_ID = B.ALBUM_ID
WHERE BILLING_DATE >= CURDATE() - INTERVAL DAYOFWEEK(CURDATE())+6 DAY
AND BILLING_DATE < CURDATE() - INTERVAL DAYOFWEEK(CURDATE())-1 DAY
GROUP BY A.NAME
ORDER BY ALBUMS_SOLD DESC;

-- Query 3:

SELECT G.NAME AS GENRE_NAME,
	   MAX(A.LIST_PRICE) AS MAX_PRICE
FROM ALBUM A
INNER JOIN GENRE G 
ON A.GENRE_ID = G.GENRE_ID
GROUP BY G.NAME;

-- Query 4:

SELECT COUNTRY, 
	   PROVINCE, 
       CITY, 
       COUNT(CUSTOMER_ID) AS COUNT_OF_CUSTOMERS
FROM CUSTOMER
GROUP BY COUNTRY, PROVINCE, CITY
ORDER BY COUNT(CUSTOMER_ID) DESC;

-- Query 5:

SELECT YEAR(BILLING_DATE) AS YEAR,
MONTHNAME(BILLING_DATE) AS MONTH_NAME,
SUM(UNITS_SOLD) AS NO_OF_ALBUMS_SOLD
     FROM BILLING
     GROUP BY YEAR(BILLING_DATE),MONTHNAME(BILLING_DATE)
     ORDER BY YEAR(BILLING_DATE),MONTHNAME(BILLING_DATE);

-- Query 6:

SELECT CONCAT(S.FIRST_NAME,' ',S.LAST_NAME) AS SINGER_NAME, 
	   COUNT(DISTINCT ALBUM_ID) AS ALBUM_COUNT
FROM ALBUM A
INNER JOIN SINGER S
ON A.SINGER_ID= S.SINGER_ID
GROUP BY SINGER_NAME;

-- Query 7:

SELECT CONCAT(S.FIRST_NAME,' ',S.LAST_NAME) AS SINGER_NAME,
	   SUM(A.QUANTITY) AS ALBUMS_IN_STOCK
FROM ALBUM A
INNER JOIN SINGER S
ON A.SINGER_ID= S.SINGER_ID
GROUP BY SINGER_NAME;

-- SCENARIO QUESTIONS :

-- DISPLAY THE CUSTOMERS AND THE PAYMENT METHOD THEY USED WHILE BILLING.

SELECT CONCAT(C.FIRST_NAME,' ',C.LAST_NAME) AS CUSTOMER_NAME,
	   PM.PAYMENT_METHOD_DESC AS MODE_OF_PAYMENT
FROM CUSTOMER C
INNER JOIN BILLING B ON C.CUSTOMER_ID = B.CUSTOMER_ID
INNER JOIN PAYMENT_METHOD PM ON B.PAYMENT_METHOD_ID = PM.PAYMENT_METHOD_ID;

-- DISPLAY THE NUMBER OF ALBUMS SOLD FOR THE MALE AND FEMALE SINGERS.

SELECT CASE
WHEN S.GENDER = 'M' THEN 'MALE SINGERS' ELSE 'FEMALE SINGERS' END AS GENDER, 
SUM(UNITS_SOLD) AS NO_OF_ALBUMS_SOLD
FROM BILLING B
INNER JOIN ALBUM A ON B.ALBUM_ID = A.ALBUM_ID 
INNER JOIN SINGER S ON A.SINGER_ID = S.SINGER_ID
GROUP BY S.GENDER;

